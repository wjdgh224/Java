import java.util.Scanner;

interface Stack {
	int length();
	int capacity();
	String pop();
	boolean push(String val);
}

class StringStack implements Stack {
	String [] word;
	int count = 0;
	public int length() { return count;}
	public int capacity() { return word.length; }
	public String pop() { 
		String temp = word[length() - 1];
		count--;
		return temp;
	}
	public boolean push(String val) {
		if(length() < capacity()) {
			word[length()] = val;
			count++;
			return true;
		}
		return false;
	}
}

public class practice {
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		StringStack stc = new StringStack();
		System.out.print("총 스택 저장 공간의 크기 입력 >> ");
		int n = scanner.nextInt();
		stc.word = new String[n];
		while(true) {
			System.out.print("문자열 입력 >> ");
			String word = scanner.next();
			if(word.equals("그만")) 
				break;
			if(!stc.push(word))
				System.out.println("스택이 꽉 차서 푸시 불가!");
				
		}
		System.out.print("스택에 저장된 모든 문자열 팝 : ");
		for(int i=0; i<n; i++) {
			System.out.print(stc.pop());
			System.out.print(" ");
		}
		scanner.close();
	}
}
